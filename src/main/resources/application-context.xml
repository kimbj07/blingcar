<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<util:properties id="main" location="classpath:properties/Properties.xml" />
	<util:properties id="jdbc" location="classpath:properties/jdbc.properties" />

	<!-- JDBC DataSource Configuration -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

        <!-- 아래 4개의 설정은 가능한 동일하게 설정하는 것이 장애상황시의 예외 케이스를 줄일수 있다.. -->
		<property name="initialSize" value="5"/>
		<property name="maxTotal" value="5"/>
        <property name="maxIdle" value="5"/>
		<property name="minIdle" value="5"/>

        <!-- pool이 고갈되었을 경우 최대 대기 타임 ms -->
		<property name="maxWaitMillis" value="3000"/>

        <!-- evictor 설정 샘플 -->
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- testWhileIdle 샘플 설정 5분마다 5개의 connection 꺼내 validation query를 날려 확인 -->
        <!--  5(6이나 오차고려) * numTestsPerEvictionRun > 5  -->
        <!--  1이상의 값이 필요함. -->
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="300000"/>
        <property name="numTestsPerEvictionRun" value="2"/>
        <property name="minEvictableIdleTimeMillis" value="-1"/>
        <property name="validationQuery" value="SELECT 1"/>


        <!-- preparedStatement cache 사용여부 -->
        <property name="poolPreparedStatements" value="false"/>
        <!-- preparedStatement cache 를 얼마나할지 설정.-->
		<property name="maxOpenPreparedStatements" value="50"/>
	</bean>
</beans>